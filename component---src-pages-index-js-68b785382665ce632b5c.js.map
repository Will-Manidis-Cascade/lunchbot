{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./node_modules/seededshuffle/index.js"],"names":["LUNCH_SPOTS","now","Date","startingSeed","btoa","getFullYear","getMonth","getDate","slice","LunchBot","state","seed","_this","props","location","search","isMoreShown","t","onNewSeed","Math","random","setState","onShowMore","s","e","prototype","render","console","log","this","_this$state","href","origin","pathname","selection","seededshuffle__WEBPACK_IMPORTED_MODULE_4___default","a","shuffle","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","className","map","spot","idx","key","onClick","Component","__webpack_exports__","default","p","184","n","__WEBPACK_AMD_DEFINE_RESULT__","root","SeededShuffle","proto","strSeed","arr","copy","getType","setSeed","shuff","size","length","genMap","i","splice","unshuffle","Array","x","__seed","test","isNaN","String","split","charCodeAt","join","Number","obj","Object","toString","call","match","create","apply","exports","module"],"mappings":"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","file":"component---src-pages-index-js-68b785382665ce632b5c.js","sourcesContent":["import React from 'react';\nimport SeededShuffle from 'seededshuffle';\n\nimport '../components/index/index.scss';\n\nconst LUNCH_SPOTS = [\n  'sweetgreen (salads)',\n  \"Felipe's (burritos)\",\n  'Zambrero (burrito bowls)',\n  'Shake Shack (burgers)',\n  'Crema Cafe (sandwiches)',\n  'b.good (burgers + salads)',\n  'Pokeworks (poke)',\n  'BONME (sandwiches)',\n  \"Darwin's Ltd (sandwiches)\",\n  'Flour Bakery (sandwiches)',\n  \"Pinnochio's (pizza)\",\n  'Clover (sandwiches)',\n  'Tatte Bakery (sandwiches + salads)',\n];\n\nconst now = new Date();\nconst startingSeed = btoa(\n  `${now.getFullYear()}-${now.getMonth()}-${now.getDate()}`,\n).slice(0, 10);\n\nclass LunchBot extends React.Component {\n  state = {\n    seed: this.props.location.search ? this.props.location.search.slice(1) : startingSeed,\n    isMoreShown: false,\n  };\n\n  onNewSeed = () => {\n    const seed = btoa(Math.random() * 999999).slice(0, 10);\n    this.setState({ seed, isMoreShown: false });\n  };\n\n  onShowMore = () => {\n    if (!this.state.isMoreShown) this.setState({ isMoreShown: true });\n  };\n\n  render() {\n    console.log(this.props);\n    const { location } = this.props;\n    const { seed, isMoreShown } = this.state;\n\n    // Get idempotent link\n    const href = location.origin + location.pathname + '?' + seed;\n\n    // Get shuffled list\n    const selection = SeededShuffle.shuffle(LUNCH_SPOTS, seed, true);\n\n    return (\n      <div className=\"LunchBot\">\n        <h1 className=\"pageTitle\">I am the Lunchbot.</h1>\n        <p>Reducing the number of choices, one meal at a time.</p>\n        <hr />\n        <h3>May I humbly suggest &mdash;</h3>\n        <ul className=\"placesList\">\n          {selection.slice(0, isMoreShown ? 3 : 1).map((spot, idx) => (\n            <li key={idx}>{spot}</li>\n          ))}\n        </ul>\n        {isMoreShown ? (\n          <button key={1} className=\"btn btn-outline-success\" onClick={this.onNewSeed}>\n            Give me new options&hellip;\n          </button>\n        ) : (\n          <button key={2} className=\"btn btn-outline-secondary\" onClick={this.onShowMore}>\n            I&apos;m not feeling it&hellip;\n          </button>\n        )}\n        <div className=\"idempotent\">\n          This link will give someone else the same options:\n          <a href={href}>{href}</a>\n        </div>\n        <footer>\n          A fun little thing by <a href=\"https://brandon.wang\">Brandon Wang</a>.\n        </footer>\n      </div>\n    );\n  }\n}\nexport default LunchBot;\n","/*\n  SeededShuffle - Node.js & Browser\n  By Louis T. <louist@ltdev.im>\n  https://github.com/LouisT/SeededShuffle/\n*/\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], function () {\n      return (root.SeededShuffle = factory());\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory();\n  } else {\n    // Browser globals\n    root.SeededShuffle = factory();\n  }\n}(this, function () {\n   var proto = {\n       strSeed: null,\n       shuffle: function (arr, seed, copy) {\n             if (this.getType(arr) == \"Array\") {\n                if (this.setSeed(seed)) {\n                   var shuff = (copy?arr.slice(0):arr),\n                       size = shuff.length,\n                       map = this.genMap(size);\n                   for (var i = size - 1; i > 0; i--) {\n                       shuff[i] = shuff.splice(map[size-1-i],1,shuff[i])[0];\n                   }\n                   return shuff;\n                };\n             };\n             return null;\n       },\n       unshuffle: function (arr, seed, copy) {\n             if (this.getType(arr) == \"Array\") {\n                if (this.setSeed(seed)) {\n                   var shuff = (copy?arr.slice(0):arr),\n                       size = shuff.length,\n                       map = this.genMap(size);\n                   for (var i = 1; i < size; i++) {\n                       shuff[i] = shuff.splice(map[size-1-i],1,shuff[i])[0];\n                   }\n                   return shuff;\n                };\n             };\n             return null;\n       },\n       genMap: function (size) {\n             var map = new Array(size);\n             for (var x = 0; x < size; x++) {\n                 //Don't change these numbers.\n                 map[x] = ((this.__seed = (this.__seed*9301+49297)%233280)/233280.0)*size|0;\n             };\n             return map;\n       },\n       setSeed: function (seed) {\n             if (!/(number|string)/i.test(this.getType(seed))) {\n                return false;\n             };\n             if (isNaN(seed)) {\n                var seed = String((this.strSeed = seed)).split('').map(function(x){return x.charCodeAt(0)}).join('');\n             };\n             return this.__seed = this.seed = Number(seed);\n       },\n       getType: function (obj) {\n             return Object.prototype.toString.call(obj).match(/^\\[object (.*)\\]$/)[1];\n       },\n   };\n   return Object.create(proto);\n}));\n"],"sourceRoot":""}